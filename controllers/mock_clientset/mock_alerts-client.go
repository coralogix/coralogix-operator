// Code generated by MockGen. DO NOT EDIT.
// Source: alerts-client.go
//
// Generated by this command:
//
//	mockgen -source alerts-client.go
//
// Package mock_clientset is a generated GoMock package.
package mock_clientset

import (
	context "context"
	reflect "reflect"

	__ "github.com/coralogix/coralogix-operator/controllers/clientset/grpc/alerts/v2"
	gomock "go.uber.org/mock/gomock"
)

// MockAlertsClientInterface is a mock of AlertsClientInterface interface.
type MockAlertsClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAlertsClientInterfaceMockRecorder
}

// MockAlertsClientInterfaceMockRecorder is the mock recorder for MockAlertsClientInterface.
type MockAlertsClientInterfaceMockRecorder struct {
	mock *MockAlertsClientInterface
}

// NewMockAlertsClientInterface creates a new mock instance.
func NewMockAlertsClientInterface(ctrl *gomock.Controller) *MockAlertsClientInterface {
	mock := &MockAlertsClientInterface{ctrl: ctrl}
	mock.recorder = &MockAlertsClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlertsClientInterface) EXPECT() *MockAlertsClientInterfaceMockRecorder {
	return m.recorder
}

// CreateAlert mocks base method.
func (m *MockAlertsClientInterface) CreateAlert(ctx context.Context, req *__.CreateAlertRequest) (*__.CreateAlertResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAlert", ctx, req)
	ret0, _ := ret[0].(*__.CreateAlertResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAlert indicates an expected call of CreateAlert.
func (mr *MockAlertsClientInterfaceMockRecorder) CreateAlert(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAlert", reflect.TypeOf((*MockAlertsClientInterface)(nil).CreateAlert), ctx, req)
}

// DeleteAlert mocks base method.
func (m *MockAlertsClientInterface) DeleteAlert(ctx context.Context, req *__.DeleteAlertByUniqueIdRequest) (*__.DeleteAlertByUniqueIdResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAlert", ctx, req)
	ret0, _ := ret[0].(*__.DeleteAlertByUniqueIdResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteAlert indicates an expected call of DeleteAlert.
func (mr *MockAlertsClientInterfaceMockRecorder) DeleteAlert(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAlert", reflect.TypeOf((*MockAlertsClientInterface)(nil).DeleteAlert), ctx, req)
}

// GetAlert mocks base method.
func (m *MockAlertsClientInterface) GetAlert(ctx context.Context, req *__.GetAlertByUniqueIdRequest) (*__.GetAlertByUniqueIdResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAlert", ctx, req)
	ret0, _ := ret[0].(*__.GetAlertByUniqueIdResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAlert indicates an expected call of GetAlert.
func (mr *MockAlertsClientInterfaceMockRecorder) GetAlert(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAlert", reflect.TypeOf((*MockAlertsClientInterface)(nil).GetAlert), ctx, req)
}

// UpdateAlert mocks base method.
func (m *MockAlertsClientInterface) UpdateAlert(ctx context.Context, req *__.UpdateAlertByUniqueIdRequest) (*__.UpdateAlertByUniqueIdResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAlert", ctx, req)
	ret0, _ := ret[0].(*__.UpdateAlertByUniqueIdResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAlert indicates an expected call of UpdateAlert.
func (mr *MockAlertsClientInterfaceMockRecorder) UpdateAlert(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAlert", reflect.TypeOf((*MockAlertsClientInterface)(nil).UpdateAlert), ctx, req)
}
