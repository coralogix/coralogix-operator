// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coralogix/coralogix-operator/controllers/clientset (interfaces: OutboundWebhooksClientInterface)
//
// Generated by this command:
//
//	mockgen -destination=../mock_clientset/mock_outboundwebhooks-client.go -package=mock_clientset github.com/coralogix/coralogix-operator/controllers/clientset OutboundWebhooksClientInterface
//
// Package mock_clientset is a generated GoMock package.
package mock_clientset

import (
	context "context"
	reflect "reflect"

	__ "github.com/coralogix/coralogix-operator/controllers/clientset/grpc/outbound-webhooks"
	gomock "go.uber.org/mock/gomock"
)

// MockOutboundWebhooksClientInterface is a mock of OutboundWebhooksClientInterface interface.
type MockOutboundWebhooksClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOutboundWebhooksClientInterfaceMockRecorder
}

// MockOutboundWebhooksClientInterfaceMockRecorder is the mock recorder for MockOutboundWebhooksClientInterface.
type MockOutboundWebhooksClientInterfaceMockRecorder struct {
	mock *MockOutboundWebhooksClientInterface
}

// NewMockOutboundWebhooksClientInterface creates a new mock instance.
func NewMockOutboundWebhooksClientInterface(ctrl *gomock.Controller) *MockOutboundWebhooksClientInterface {
	mock := &MockOutboundWebhooksClientInterface{ctrl: ctrl}
	mock.recorder = &MockOutboundWebhooksClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOutboundWebhooksClientInterface) EXPECT() *MockOutboundWebhooksClientInterfaceMockRecorder {
	return m.recorder
}

// CreateOutboundWebhook mocks base method.
func (m *MockOutboundWebhooksClientInterface) CreateOutboundWebhook(arg0 context.Context, arg1 *__.CreateOutgoingWebhookRequest) (*__.CreateOutgoingWebhookResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOutboundWebhook", arg0, arg1)
	ret0, _ := ret[0].(*__.CreateOutgoingWebhookResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOutboundWebhook indicates an expected call of CreateOutboundWebhook.
func (mr *MockOutboundWebhooksClientInterfaceMockRecorder) CreateOutboundWebhook(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOutboundWebhook", reflect.TypeOf((*MockOutboundWebhooksClientInterface)(nil).CreateOutboundWebhook), arg0, arg1)
}

// DeleteOutboundWebhook mocks base method.
func (m *MockOutboundWebhooksClientInterface) DeleteOutboundWebhook(arg0 context.Context, arg1 *__.DeleteOutgoingWebhookRequest) (*__.DeleteOutgoingWebhookResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOutboundWebhook", arg0, arg1)
	ret0, _ := ret[0].(*__.DeleteOutgoingWebhookResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteOutboundWebhook indicates an expected call of DeleteOutboundWebhook.
func (mr *MockOutboundWebhooksClientInterfaceMockRecorder) DeleteOutboundWebhook(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOutboundWebhook", reflect.TypeOf((*MockOutboundWebhooksClientInterface)(nil).DeleteOutboundWebhook), arg0, arg1)
}

// GetOutboundWebhook mocks base method.
func (m *MockOutboundWebhooksClientInterface) GetOutboundWebhook(arg0 context.Context, arg1 *__.GetOutgoingWebhookRequest) (*__.GetOutgoingWebhookResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOutboundWebhook", arg0, arg1)
	ret0, _ := ret[0].(*__.GetOutgoingWebhookResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOutboundWebhook indicates an expected call of GetOutboundWebhook.
func (mr *MockOutboundWebhooksClientInterfaceMockRecorder) GetOutboundWebhook(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOutboundWebhook", reflect.TypeOf((*MockOutboundWebhooksClientInterface)(nil).GetOutboundWebhook), arg0, arg1)
}

// UpdateOutboundWebhook mocks base method.
func (m *MockOutboundWebhooksClientInterface) UpdateOutboundWebhook(arg0 context.Context, arg1 *__.UpdateOutgoingWebhookRequest) (*__.UpdateOutgoingWebhookResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOutboundWebhook", arg0, arg1)
	ret0, _ := ret[0].(*__.UpdateOutgoingWebhookResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateOutboundWebhook indicates an expected call of UpdateOutboundWebhook.
func (mr *MockOutboundWebhooksClientInterfaceMockRecorder) UpdateOutboundWebhook(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOutboundWebhook", reflect.TypeOf((*MockOutboundWebhooksClientInterface)(nil).UpdateOutboundWebhook), arg0, arg1)
}
