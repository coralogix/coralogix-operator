// Code generated by MockGen. DO NOT EDIT.
// Source: outbound-webhooks-client.go
//
// Generated by this command:
//
//	mockgen -destination=../mock_clientset/mock_outboundwebhooks-client.go -package=mock_clientset -source=outbound-webhooks-client.go OutboundWebhooksClientInterface
//
// Package mock_clientset is a generated GoMock package.
package mock_clientset

import (
	context "context"
	reflect "reflect"

	cxsdk "github.com/coralogix/coralogix-management-sdk/go"
	gomock "go.uber.org/mock/gomock"
)

// MockOutboundWebhooksClientInterface is a mock of OutboundWebhooksClientInterface interface.
type MockOutboundWebhooksClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOutboundWebhooksClientInterfaceMockRecorder
}

// MockOutboundWebhooksClientInterfaceMockRecorder is the mock recorder for MockOutboundWebhooksClientInterface.
type MockOutboundWebhooksClientInterfaceMockRecorder struct {
	mock *MockOutboundWebhooksClientInterface
}

// NewMockOutboundWebhooksClientInterface creates a new mock instance.
func NewMockOutboundWebhooksClientInterface(ctrl *gomock.Controller) *MockOutboundWebhooksClientInterface {
	mock := &MockOutboundWebhooksClientInterface{ctrl: ctrl}
	mock.recorder = &MockOutboundWebhooksClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOutboundWebhooksClientInterface) EXPECT() *MockOutboundWebhooksClientInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockOutboundWebhooksClientInterface) Create(ctx context.Context, req *cxsdk.CreateOutgoingWebhookRequest) (*cxsdk.CreateOutgoingWebhookResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, req)
	ret0, _ := ret[0].(*cxsdk.CreateOutgoingWebhookResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockOutboundWebhooksClientInterfaceMockRecorder) Create(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockOutboundWebhooksClientInterface)(nil).Create), ctx, req)
}

// Delete mocks base method.
func (m *MockOutboundWebhooksClientInterface) Delete(ctx context.Context, req *cxsdk.DeleteOutgoingWebhookRequest) (*cxsdk.DeleteOutgoingWebhookResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, req)
	ret0, _ := ret[0].(*cxsdk.DeleteOutgoingWebhookResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockOutboundWebhooksClientInterfaceMockRecorder) Delete(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockOutboundWebhooksClientInterface)(nil).Delete), ctx, req)
}

// Get mocks base method.
func (m *MockOutboundWebhooksClientInterface) Get(ctx context.Context, req *cxsdk.GetOutgoingWebhookRequest) (*cxsdk.GetOutgoingWebhookResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, req)
	ret0, _ := ret[0].(*cxsdk.GetOutgoingWebhookResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockOutboundWebhooksClientInterfaceMockRecorder) Get(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockOutboundWebhooksClientInterface)(nil).Get), ctx, req)
}

// List mocks base method.
func (m *MockOutboundWebhooksClientInterface) List(ctx context.Context, req *cxsdk.ListAllOutgoingWebhooksRequest) (*cxsdk.ListAllOutgoingWebhooksResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx, req)
	ret0, _ := ret[0].(*cxsdk.ListAllOutgoingWebhooksResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockOutboundWebhooksClientInterfaceMockRecorder) List(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockOutboundWebhooksClientInterface)(nil).List), ctx, req)
}

// Update mocks base method.
func (m *MockOutboundWebhooksClientInterface) Update(ctx context.Context, req *cxsdk.UpdateOutgoingWebhookRequest) (*cxsdk.UpdateOutgoingWebhookResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, req)
	ret0, _ := ret[0].(*cxsdk.UpdateOutgoingWebhookResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockOutboundWebhooksClientInterfaceMockRecorder) Update(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockOutboundWebhooksClientInterface)(nil).Update), ctx, req)
}
