// Code generated by MockGen. DO NOT EDIT.
// Source: rules-groups-client.go
//
// Generated by this command:
//
//	mockgen -destination=../mock_clientset/mock_rulegroups-client.go -package=mock_clientset -source=rules-groups-client.go RuleGroupsClientInterface
//
// Package mock_clientset is a generated GoMock package.
package mock_clientset

import (
	context "context"
	reflect "reflect"

	cxsdk "github.com/coralogix/coralogix-management-sdk/go"
	gomock "go.uber.org/mock/gomock"
)

// MockRuleGroupsClientInterface is a mock of RuleGroupsClientInterface interface.
type MockRuleGroupsClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRuleGroupsClientInterfaceMockRecorder
}

// MockRuleGroupsClientInterfaceMockRecorder is the mock recorder for MockRuleGroupsClientInterface.
type MockRuleGroupsClientInterfaceMockRecorder struct {
	mock *MockRuleGroupsClientInterface
}

// NewMockRuleGroupsClientInterface creates a new mock instance.
func NewMockRuleGroupsClientInterface(ctrl *gomock.Controller) *MockRuleGroupsClientInterface {
	mock := &MockRuleGroupsClientInterface{ctrl: ctrl}
	mock.recorder = &MockRuleGroupsClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRuleGroupsClientInterface) EXPECT() *MockRuleGroupsClientInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockRuleGroupsClientInterface) Create(ctx context.Context, req *cxsdk.CreateRuleGroupRequest) (*cxsdk.CreateRuleGroupResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, req)
	ret0, _ := ret[0].(*cxsdk.CreateRuleGroupResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockRuleGroupsClientInterfaceMockRecorder) Create(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockRuleGroupsClientInterface)(nil).Create), ctx, req)
}

// Delete mocks base method.
func (m *MockRuleGroupsClientInterface) Delete(ctx context.Context, req *cxsdk.DeleteRuleGroupRequest) (*cxsdk.DeleteRuleGroupResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, req)
	ret0, _ := ret[0].(*cxsdk.DeleteRuleGroupResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockRuleGroupsClientInterfaceMockRecorder) Delete(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockRuleGroupsClientInterface)(nil).Delete), ctx, req)
}

// Get mocks base method.
func (m *MockRuleGroupsClientInterface) Get(ctx context.Context, req *cxsdk.GetRuleGroupRequest) (*cxsdk.GetRuleGroupResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, req)
	ret0, _ := ret[0].(*cxsdk.GetRuleGroupResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockRuleGroupsClientInterfaceMockRecorder) Get(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRuleGroupsClientInterface)(nil).Get), ctx, req)
}

// Update mocks base method.
func (m *MockRuleGroupsClientInterface) Update(ctx context.Context, req *cxsdk.UpdateRuleGroupRequest) (*cxsdk.UpdateRuleGroupResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, req)
	ret0, _ := ret[0].(*cxsdk.UpdateRuleGroupResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockRuleGroupsClientInterfaceMockRecorder) Update(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockRuleGroupsClientInterface)(nil).Update), ctx, req)
}
