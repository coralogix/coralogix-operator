# -- Provide a name in place of coralogix-operator for `app:` labels
nameOverride: ""

# -- Provide a name to substitute for the full names of resources
fullnameOverride: ""

imagePullSecrets: []

deployment:
  # -- How many coralogix-operator pods to run
  replicas: 1

# -- Service account for Coralogix operator to use.
# -- ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true

  # -- The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  name: ""

  # -- Annotations to add to the service account
  annotations: {}

# -- Annotations to add to the operator pod
podAnnotations: {}

# -- Service monitor for Prometheus to use.
serviceMonitor:
  # -- Specifies whether a service monitor should be created.
  create: true

validatingWebhookConfiguration:
  # -- Specifies whether a ValidatingWebhookConfiguration should be created.
  create: true

certificate:
  # -- Specifies whether a Certificate should be created.
  create: true

issuer:
  # -- Specifies whether an Issuer should be created.
  create: true

# -- SecurityContext holds pod-level security attributes and common container settings.
# -- This defaults to non root user with uid 2000 and gid 2000. *v1.PodSecurityContext  false
# -- ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext:
  fsGroup: 2000
  runAsGroup: 2000
  runAsNonRoot: true
  runAsUser: 2000
  seccompProfile:
    type: RuntimeDefault

# -- Define which Nodes the Pods are scheduled on.
# -- ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

# -- If specified, the pod's tolerations.
# -- ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Assign custom affinity rules
# -- ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
affinity: {}

# -- Configuration for Coralogix operator secret
secret:
  # -- Indicates if the Coralogix operator secret should be created
  create: true

  # -- Labels to add to the Coralogix operator secret
  labels: {}

  # -- Annotations to add to the Coralogix operator secret
  annotations: {}

  # -- secretKeyReference is used to reference an existing Kubernetes secret
  # -- Use secretKeyReference if you're concerned with exposing sensitive data over you chart's values file.
  # -- secret.data and secret.secretKeyReference should be mutually exclusive.
  secretKeyReference: {}
  #   name: "coralogix-operator"
  #   key: "apiKey"

  # -- Coralogix operator secret data
  data:
    apiKey: ""

# -- Coralogix operator container config
coralogixOperator:
  # -- Enable leader election for controller manager. Enabling this will ensure there is only one active controller manager.
  leaderElection:
    enabled: true

  # Set this to false if PrometheusRule CRD is not available in the cluster.
  prometheusRules:
    enabled: true

  # Set this to false if you want to disable validation and conversion webhooks.
  # Leaving true assumes you have cert-manager installed in your cluster.
  webhooks:
    enabled: true

  # --  Coralogix operator Image
  image:
    repository: coralogixrepo/coralogix-operator
    tag: ""
    pullPolicy: IfNotPresent

  # -- Coralogix Account Region
  region: ""

  # -- Coralogix Account Domain
  domain: ""

  # -- A comma-separated list of key=value labels to filter custom resources
  labelSelector: {}

  # -- A list of namespaces to filter custom resources
  namespaceSelector: {}

  # -- The interval in seconds to reconcile each custom resource
  reconcileIntervalSeconds:
    ruleGroup: ""
    alert: ""
    recordingRuleGroupSet: ""
    outboundWebhook: ""
    apiKey: ""
    customRole: ""
    scope: ""
    group: ""
    tcoLogsPolicies: ""
    tcoTracesPolicies: ""
    integration: ""
    alertScheduler: ""
    dashboard: ""
    dashboardsFolder: ""
    view: ""
    viewFolder: ""
    prometheusRule: ""

  # -- resource config for Coralogix operator
  resources: {}

  # -- Security context for Coralogix operator container
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
