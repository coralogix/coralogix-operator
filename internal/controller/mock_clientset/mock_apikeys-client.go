// Code generated by MockGen. DO NOT EDIT.
// Source: api-keys-client.go
//
// Generated by this command:
//
//	mockgen -destination=../mock_clientset/mock_apikeys-client.go -package=mock_clientset -source=api-keys-client.go ApiKeysClientInterface
//
// Package mock_clientset is a generated GoMock package.
package mock_clientset

import (
	context "context"
	reflect "reflect"

	cxsdk "github.com/coralogix/coralogix-management-sdk/go"
	gomock "go.uber.org/mock/gomock"
)

// MockApiKeysClientInterface is a mock of ApiKeysClientInterface interface.
type MockApiKeysClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockApiKeysClientInterfaceMockRecorder
}

// MockApiKeysClientInterfaceMockRecorder is the mock recorder for MockApiKeysClientInterface.
type MockApiKeysClientInterfaceMockRecorder struct {
	mock *MockApiKeysClientInterface
}

// NewMockApiKeysClientInterface creates a new mock instance.
func NewMockApiKeysClientInterface(ctrl *gomock.Controller) *MockApiKeysClientInterface {
	mock := &MockApiKeysClientInterface{ctrl: ctrl}
	mock.recorder = &MockApiKeysClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApiKeysClientInterface) EXPECT() *MockApiKeysClientInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockApiKeysClientInterface) Create(ctx context.Context, req *cxsdk.CreateAPIKeyRequest) (*cxsdk.CreateAPIKeyResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, req)
	ret0, _ := ret[0].(*cxsdk.CreateAPIKeyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockApiKeysClientInterfaceMockRecorder) Create(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockApiKeysClientInterface)(nil).Create), ctx, req)
}

// Delete mocks base method.
func (m *MockApiKeysClientInterface) Delete(ctx context.Context, req *cxsdk.DeleteAPIKeyRequest) (*cxsdk.DeleteAPIKeyResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, req)
	ret0, _ := ret[0].(*cxsdk.DeleteAPIKeyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockApiKeysClientInterfaceMockRecorder) Delete(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockApiKeysClientInterface)(nil).Delete), ctx, req)
}

// Get mocks base method.
func (m *MockApiKeysClientInterface) Get(ctx context.Context, req *cxsdk.GetAPIKeyRequest) (*cxsdk.GetAPIKeyResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, req)
	ret0, _ := ret[0].(*cxsdk.GetAPIKeyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockApiKeysClientInterfaceMockRecorder) Get(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockApiKeysClientInterface)(nil).Get), ctx, req)
}

// Update mocks base method.
func (m *MockApiKeysClientInterface) Update(ctx context.Context, req *cxsdk.UpdateAPIKeyRequest) (*cxsdk.UpdateAPIKeyResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, req)
	ret0, _ := ret[0].(*cxsdk.UpdateAPIKeyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockApiKeysClientInterfaceMockRecorder) Update(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockApiKeysClientInterface)(nil).Update), ctx, req)
}
