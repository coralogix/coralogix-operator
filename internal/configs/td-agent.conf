<source>
  @id fluentd-containers.log
  @type tail
  @label @KUBERNETES_CONTAINERS
  path /var/log/containers/*.log
  pos_file /var/log/containers.log.pos
  from_encoding ISO8859-1
  encoding UTF-8
  tag raw.containers.*
  <parse>
    @type multi_format
    <pattern>
      format json
      time_key time
      time_format %Y-%m-%dT%H:%M:%S.%NZ
      keep_time_key true
    </pattern>
    <pattern>
      format /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
      time_format %Y-%m-%dT%H:%M:%S.%N%:z
      keep_time_key true
    </pattern>
  </parse>
</source>
<label @KUBERNETES_CONTAINERS>
  <match raw.containers.**>
    @id raw.containers
    @type detect_exceptions
    remove_tag_prefix raw
    message log
    stream stream
    multiline_flush_interval 5
    max_bytes 500000
    max_lines 1000
  </match>
  <filter containers.**>
    @type kubernetes_metadata
  </filter>
  <filter containers.**>
    @type record_transformer
    enable_ruby true
    <record>
      kubernetes ${record["kubernetes"].merge({"cluster_name" => ENV.fetch("CLUSTER_NAME", "cluster.local")})}
    </record>
  </filter>
  <match containers.**>
    @type rewrite_tag_filter
    <rule>
      key $.kubernetes.container_name
      pattern ^(.+)$
      tag $1.${tag}
    </rule>
  </match>
  <filter *.containers.**>
    @type parser
    key_name log
    reserve_time true
    reserve_data true
    remove_key_name_field true
    replace_invalid_sequence true
    emit_invalid_record_to_error false
    <parse>
      @type json
      keep_time_key true
    </parse>
  </filter>
  <match *.containers.**>
    @type relabel
    @label @CORALOGIX
  </match>
</label>
<label @CORALOGIX>
  <filter **>
    @type record_transformer
    @log_level warn
    enable_ruby true
    auto_typecast true
    renew_record true
    <record>
      privateKey "#{ENV['CORALOGIX_PRIVATE_KEY']}"
      applicationName ${record.dig("kubernetes", "namespace_name")}
      subsystemName ${record.dig("kubernetes", "container_name")}
      computerName ${record.dig("kubernetes", "host")}
      timestamp ${time.strftime('%s%L')}
      text ${record.to_json}
    </record>
  </filter>
  <match **>
    @type http
    @id out_http_coralogix
    endpoint "https://#{ENV['CORALOGIX_ENDPOINT'] || 'api.coralogix.com'}/logs/rest/singles"
    headers_from_placeholders {"private_key":"${$.privateKey}"}
    error_response_as_unrecoverable false
    <buffer $.privateKey>
      @type memory
      chunk_limit_size 10MB
      compress gzip
      flush_interval 1s
      overflow_action block
      retry_max_times 5
      retry_type periodic
      retry_wait 2
    </buffer>
  </match>
</label>