apiVersion: coralogix.com/v1beta1
kind: Alert
metadata:
  finalizers:
    - alert.coralogix.com/finalizer
  labels:
    app.coralogix.com/managed-by-alertmanager-config: "true"
    app.kubernetes.io/managed-by: prometheus-example-rules-test
  name: prometheus-example-rules-test-app-latency-0
  namespace: default
  ownerReferences:
    - apiVersion: monitoring.coreos.com/v1
      kind: PrometheusRule
      name: prometheus-example-rules-test
spec:
  alertType:
    metricThreshold:
      metricFilter:
        promql: histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter="source",destination_service=~"ingress-annotation-test-svc.example-app.svc.cluster.local"}[1m]))
          by (le, destination_workload)) > 0.2
      missingValues:
        minNonNullValuesPct: 0
        replaceWithZero: false
      rules:
        - condition:
            conditionType: moreThan
            forOverPct: 100
            ofTheLast:
              specificValue: 5m
            threshold: "0"
  description: This is an app latency alert
  enabled: true
  entityLabels:
    severity: critical
    slack_channel: '#observability'
  name: app-latency
  notificationGroup:
    groupByKeys:
      - alertname
      - cluster
      - alert_group
      - job
      - namespace
      - severity
      - priority
    webhooks:
      - integration:
          integrationRef:
            backendRef:
              name: slack-general.slack.0
        notifyOn: triggeredOnly
        retriggeringPeriod:
          minutes: 4
  phantomMode: false
  priority: p1

---
apiVersion: coralogix.com/v1beta1
kind: Alert
metadata:
  finalizers:
    - alert.coralogix.com/finalizer
  labels:
    app.coralogix.com/managed-by-alertmanager-config: "true"
    app.kubernetes.io/managed-by: prometheus-example-rules-test
  name: prometheus-example-rules-test-app-latency-1
  namespace: default
  ownerReferences:
    - apiVersion: monitoring.coreos.com/v1
      kind: PrometheusRule
      name: prometheus-example-rules-test
spec:
  alertType:
    metricThreshold:
      metricFilter:
        promql: histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter="source",destination_service=~"ingress-annotation-test-svc.example-app.svc.cluster.local"}[1m]))
          by (le, destination_workload)) > 0.2
      missingValues:
        minNonNullValuesPct: 0
        replaceWithZero: false
      rules:
        - condition:
            conditionType: moreThan
            forOverPct: 100
            ofTheLast:
              specificValue: 5m
            threshold: "0"
  description: This is an app latency alert
  enabled: true
  entityLabels:
    opsgenie_team: team1
    severity: info
  name: app-latency
  notificationGroup:
    groupByKeys:
      - alertname
      - cluster
      - alert_group
      - job
      - namespace
      - severity
      - priority
    webhooks:
      - integration:
          integrationRef:
            backendRef:
              name: slack-general.slack.0
        notifyOn: triggeredOnly
        retriggeringPeriod:
          minutes: 4
  phantomMode: false
  priority: p4

---
apiVersion: coralogix.com/v1beta1
kind: Alert
metadata:
  finalizers:
    - alert.coralogix.com/finalizer
  labels:
    app.coralogix.com/managed-by-alertmanager-config: "true"
    app.kubernetes.io/managed-by: prometheus-example-rules-test
  name: prometheus-example-rules-test-app-latency-2
  namespace: default
  ownerReferences:
    - apiVersion: monitoring.coreos.com/v1
      kind: PrometheusRule
      name: prometheus-example-rules-test
spec:
  alertType:
    metricThreshold:
      metricFilter:
        promql: histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter="source",destination_service=~"ingress-annotation-test-svc.example-app.svc.cluster.local"}[1m]))
          by (le, destination_workload)) > 0.2
      missingValues:
        minNonNullValuesPct: 0
        replaceWithZero: false
      rules:
        - condition:
            conditionType: moreThan
            forOverPct: 100
            ofTheLast:
              specificValue: 5m
            threshold: "0"
  description: This is an app latency alert
  enabled: true
  name: app-latency
  notificationGroup:
    groupByKeys:
      - alertname
      - cluster
      - alert_group
      - job
      - namespace
      - severity
      - priority
    webhooks:
      - integration:
          integrationRef:
            backendRef:
              name: slack-default.slack.0
        notifyOn: triggeredOnly
        retriggeringPeriod:
          minutes: 3
  phantomMode: false
  priority: p4

