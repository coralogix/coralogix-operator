---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: rulegroups.coralogix.com
spec:
  group: coralogix.com
  names:
    kind: RuleGroup
    listKind: RuleGroupList
    plural: rulegroups
    singular: rulegroup
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RuleGroup is the Schema for the rulegroups API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RuleGroupSpec defines the Desired state of RuleGroup
            properties:
              active:
                default: true
                type: boolean
              applications:
                items:
                  type: string
                type: array
              creator:
                type: string
              description:
                type: string
              hidden:
                default: false
                type: boolean
              name:
                minLength: 0
                type: string
              order:
                format: int32
                minimum: 1
                type: integer
              severities:
                items:
                  enum:
                  - Debug
                  - Verbose
                  - Info
                  - Warning
                  - Error
                  - Critical
                  type: string
                type: array
              subgroups:
                description: |-
                  Rules within the same subgroup have an OR relationship,
                  while rules in different subgroups have an AND relationship.
                  Refer to https://github.com/coralogix/coralogix-operator/blob/main/config/samples/v1alpha1/rulegroups/mixed_rulegroup.yaml
                  for an example.
                items:
                  properties:
                    active:
                      default: true
                      type: boolean
                    id:
                      type: string
                    order:
                      format: int32
                      type: integer
                    rules:
                      items:
                        properties:
                          active:
                            default: true
                            type: boolean
                          block:
                            properties:
                              blockingAllMatchingBlocks:
                                default: true
                                type: boolean
                              keepBlockedLogs:
                                default: false
                                type: boolean
                              regex:
                                type: string
                              sourceField:
                                type: string
                            required:
                            - regex
                            - sourceField
                            type: object
                          description:
                            type: string
                          extract:
                            properties:
                              regex:
                                type: string
                              sourceField:
                                type: string
                            required:
                            - regex
                            - sourceField
                            type: object
                          extractTimestamp:
                            properties:
                              fieldFormatStandard:
                                enum:
                                - Strftime
                                - JavaSDF
                                - Golang
                                - SecondTS
                                - MilliTS
                                - MicroTS
                                - NanoTS
                                type: string
                              sourceField:
                                type: string
                              timeFormat:
                                type: string
                            required:
                            - fieldFormatStandard
                            - sourceField
                            - timeFormat
                            type: object
                          jsonExtract:
                            properties:
                              destinationField:
                                enum:
                                - Category
                                - CLASSNAME
                                - METHODNAME
                                - THREADID
                                - SEVERITY
                                type: string
                              jsonKey:
                                type: string
                            required:
                            - destinationField
                            - jsonKey
                            type: object
                          jsonStringify:
                            properties:
                              destinationField:
                                type: string
                              keepSourceField:
                                default: false
                                type: boolean
                              sourceField:
                                type: string
                            required:
                            - destinationField
                            - sourceField
                            type: object
                          name:
                            minLength: 0
                            type: string
                          parse:
                            properties:
                              destinationField:
                                type: string
                              regex:
                                type: string
                              sourceField:
                                type: string
                            required:
                            - destinationField
                            - regex
                            - sourceField
                            type: object
                          parseJsonField:
                            properties:
                              destinationField:
                                type: string
                              keepDestinationField:
                                type: boolean
                              keepSourceField:
                                type: boolean
                              sourceField:
                                type: string
                            required:
                            - destinationField
                            - keepDestinationField
                            - keepSourceField
                            - sourceField
                            type: object
                          removeFields:
                            properties:
                              excludedFields:
                                items:
                                  type: string
                                type: array
                            required:
                            - excludedFields
                            type: object
                          replace:
                            properties:
                              destinationField:
                                type: string
                              regex:
                                type: string
                              replacementString:
                                type: string
                              sourceField:
                                type: string
                            required:
                            - destinationField
                            - regex
                            - replacementString
                            - sourceField
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                  type: object
                type: array
              subsystems:
                items:
                  type: string
                type: array
            required:
            - name
            type: object
          status:
            description: RuleGroupStatus defines the observed state of RuleGroup
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              id:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
